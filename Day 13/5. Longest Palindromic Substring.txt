Link - https://leetcode.com/problems/find-the-index-of-the-first-occurrence-in-a-string/


Problem - 

Given two strings needle and haystack, return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.

Example 1:

Input: haystack = "sadbutsad", needle = "sad"
Output: 0
Explanation: "sad" occurs at index 0 and 6.
The first occurrence is at index 0, so we return 0.

Approach - 

Handle Special Cases:

If the needle is an empty string, return 0 since an empty string is always found at the beginning of any string.
If the length of the haystack is less than the length of the needle, return -1 because the needle cannot be present.
Create Character Mapping:

Create a mapping of characters in the haystack and needle to values for the rolling hash. This mapping is used to assign unique values to each character, ensuring consistent hash calculations.
Calculate Hash of the Needle (check_val):

Calculate the hash value of the needle using the character mapping and a rolling hash approach.
Initialize Rolling Hash (rolling_hash):

Initialize the rolling hash for the first window of the haystack, which has the same length as the needle.
Check the First Window:

Compare the rolling hash of the first window with the hash of the needle. If they match, return 0 since the needle is found at the beginning of the haystack.
Iterate Through the Haystack:

Use a rolling hash approach to slide a window of the same length as the needle through the haystack.
Update the rolling hash by removing the value of the character being removed from the window and adding the value of the character being added to the window.
Check if the updated rolling hash matches the hash of the needle. If it does, return the index of the starting position of the match.
No Match Found:

If the loop completes without finding a match, return -1 to indicate that the needle is not present in the haystack.